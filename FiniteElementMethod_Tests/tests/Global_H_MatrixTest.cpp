#include "pch.h"

#include "gtest/gtest.h"

#include "Simulation.h"

static const double EPSILON = 1e-3;

static double globalHMatrixFixture_1_4_4[16][16] = {
    { 23.3333, -2.5, 0, 0, -2.5, -8.33333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { -2.5, 40, -2.5, 0, -8.33333, -8.33333, -8.33333, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, -2.5, 40, -2.5, 0, -8.33333, -8.33333, -8.33333, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, -2.5, 23.3333, 0, 0, -8.33333, -2.5, 0, 0, 0, 0, 0, 0, 0, 0 },
    { -2.5, -8.33333, 0, 0, 40, -8.33334, 0, 0, -2.5, -8.33333, 0, 0, 0, 0, 0, 0 },
    { -8.33333, -8.33333, -8.33333, 0, -8.33334, 66.6667, -8.33333, 0, -8.33333, -8.33333, -8.33333, 0, 0, 0, 0, 0 },
    { 0, -8.33333, -8.33333, -8.33333, 0, -8.33333, 66.6667, -8.33333, 0, -8.33333, -8.33333, -8.33333, 0, 0, 0, 0 },
    { 0, 0, -8.33333, -2.5, 0, 0, -8.33333, 40, 0, 0, -8.33333, -2.5, 0, 0, 0, 0 },
    { 0, 0, 0, 0, -2.5, -8.33333, 0, 0, 40, -8.33333, 0, 0, -2.5, -8.33333, 0, 0 },
    { 0, 0, 0, 0, -8.33333, -8.33333, -8.33333, 0, -8.33333, 66.6667, -8.33333, 0, -8.33333, -8.33333, -8.33333, 0 },
    { 0, 0, 0, 0, 0, -8.33333, -8.33333, -8.33333, 0, -8.33333, 66.6667, -8.33333, 0, -8.33333, -8.33334, -8.33333 },
    { 0, 0, 0, 0, 0, 0, -8.33333, -2.5, 0, 0, -8.33333, 40, 0, 0, -8.33333, -2.5 },
    { 0, 0, 0, 0, 0, 0, 0, 0, -2.5, -8.33333, 0, 0, 23.3333, -2.5, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, -8.33333, -8.33333, -8.33333, 0, -2.5, 40, -2.5, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, -8.33333, -8.33334, -8.33333, 0, -2.5, 40, -2.5 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8.33333, -2.5, 0, 0, -2.5, 23.3333 }
};

static double globalHMatrixFixture_2_4_4[16][16] = {
    { 26.824, -1.13431, 0, 0, -1.13431, -10.963, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { -1.13431, 43.3438, -3.58878, 0, -6.10152, -7.64516, -13.2722, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, -3.58878, 40.7351, -4.35854, 0, -4.50181, -7.71486, -12.3674, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, -4.35854, 20.7445, 0, 0, -5.23115, -4.35854, 0, 0, 0, 0, 0, 0, 0, 0 },
    { -1.13431, -6.10152, 0, 0, 43.3438, -7.64516, 0, 0, -3.58878, -13.2722, 0, 0, 0, 0, 0, 0 },
    { -10.963, -7.64516, -4.50181, 0, -7.64516, 71.0151, -10.2767, 0, -4.50181, -10.2767, -15.2049, 0, 0, 0, 0, 0 },
    { 0, -13.2722, -7.71486, -5.23115, 0, -10.2767, 71.0237, -7.71486, 0, -3.26505, -10.2767, -13.2722, 0, 0, 0, 0 },
    { 0, 0, -12.3674, -4.35854, 0, 0, -7.71486, 40.7351, 0, 0, -4.50181, -3.58878, 0, 0, 0, 0 },
    { 0, 0, 0, 0, -3.58878, -4.50181, 0, 0, 40.7351, -7.71486, 0, 0, -4.35854, -12.3674, 0, 0 },
    { 0, 0, 0, 0, -13.2722, -10.2767, -3.26505, 0, -7.71486, 71.0237, -10.2767, 0, -5.23115, -7.71486, -13.2722, 0 },
    { 0, 0, 0, 0, 0, -15.2049, -10.2767, -4.50181, 0, -10.2767, 71.0151, -7.64516, 0, -4.50181, -7.64516, -10.963 },
    { 0, 0, 0, 0, 0, 0, -13.2722, -3.58878, 0, 0, -7.64516, 43.3438, 0, 0, -6.10152, -1.13431 },
    { 0, 0, 0, 0, 0, 0, 0, 0, -4.35854, -5.23115, 0, 0, 20.7445, -4.35854, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, -12.3674, -7.71486, -4.50181, 0, -4.35854, 40.7351, -3.58878, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, -13.2722, -7.64516, -6.10152, 0, -3.58878, 43.3438, -1.13431 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10.963, -1.13431, 0, 0, -1.13431, 26.824 }
};

TEST(Global_H_MatrixTest, GeneratesValidMatrixFor_Test1_4_4)
{
    // Given
    Simulation simulation(FileTypeEnum::TEXT, "../../../Input/Grids/Test1_4_4.txt");

    // When
    simulation.Run();

    // Then
    for (int i = 0; i < 16; i++) for (int j = 0; j < 16; j++)
        EXPECT_NEAR(globalHMatrixFixture_1_4_4[i][j], simulation.m_Grid.m_GlobalHMatrix.GetElement(i, j), EPSILON);
}

TEST(Global_H_MatrixTest, GeneratesValidMatrixFor_Test2_4_4)
{
    // Given
    Simulation simulation(FileTypeEnum::TEXT, "../../../Input/Grids/Test2_4_4_MixGrid.txt");

    // When
    simulation.Run();

    // Then
    for (int i = 0; i < 16; i++) for (int j = 0; j < 16; j++)
        EXPECT_NEAR(globalHMatrixFixture_2_4_4[i][j], simulation.m_Grid.m_GlobalHMatrix.GetElement(i, j), EPSILON);
}
